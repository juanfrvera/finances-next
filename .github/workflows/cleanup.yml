name: Cleanup and Rollback

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - cleanup-staging
          - rollback-prod
          - delete-stack
      environment:
        description: 'Environment (for rollback/delete)'
        required: false
        default: 'prod'
        type: choice
        options:
          - dev
          - prod
      pr_number:
        description: 'PR number (for staging cleanup)'
        required: false
        type: string

env:
  AWS_REGION: us-east-1

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Cleanup staging environment
      if: github.event.inputs.action == 'cleanup-staging'
      run: |
        if [ -n "${{ github.event.inputs.pr_number }}" ]; then
          STACK_NAME="finances-app-pr-${{ github.event.inputs.pr_number }}"
          
          echo "Cleaning up staging environment: $STACK_NAME"
          
          # Check if stack exists
          if aws cloudformation describe-stacks --stack-name "$STACK_NAME" --region ${{ env.AWS_REGION }} >/dev/null 2>&1; then
            echo "Deleting stack: $STACK_NAME"
            aws cloudformation delete-stack --stack-name "$STACK_NAME" --region ${{ env.AWS_REGION }}
            
            echo "Waiting for stack deletion..."
            aws cloudformation wait stack-delete-complete --stack-name "$STACK_NAME" --region ${{ env.AWS_REGION }}
            
            echo "✅ Staging environment cleaned up successfully"
          else
            echo "Stack $STACK_NAME not found, nothing to clean up"
          fi
        else
          echo "❌ PR number is required for staging cleanup"
          exit 1
        fi
    
    - name: Rollback production
      if: github.event.inputs.action == 'rollback-prod'
      run: |
        STACK_NAME="finances-app-${{ github.event.inputs.environment }}"
        
        echo "Rolling back environment: $STACK_NAME"
        
        # Get previous Lambda function version
        FUNCTION_NAME=$(aws cloudformation describe-stacks \
          --stack-name "$STACK_NAME" \
          --region ${{ env.AWS_REGION }} \
          --query 'Stacks[0].Outputs[?OutputKey==`LambdaFunctionName`].OutputValue' \
          --output text)
        
        if [ -n "$FUNCTION_NAME" ] && [ "$FUNCTION_NAME" != "None" ]; then
          # List versions and get the previous one
          VERSIONS=$(aws lambda list-versions-by-function \
            --function-name "$FUNCTION_NAME" \
            --region ${{ env.AWS_REGION }} \
            --query 'Versions[?Version!=`$LATEST`].Version' \
            --output text)
          
          if [ -n "$VERSIONS" ]; then
            # Get the second-to-last version
            PREVIOUS_VERSION=$(echo "$VERSIONS" | tr ' ' '\n' | tail -2 | head -1)
            
            if [ -n "$PREVIOUS_VERSION" ]; then
              echo "Rolling back to version: $PREVIOUS_VERSION"
              
              # Update alias to point to previous version
              aws lambda update-alias \
                --function-name "$FUNCTION_NAME" \
                --name "live" \
                --function-version "$PREVIOUS_VERSION" \
                --region ${{ env.AWS_REGION }} 2>/dev/null || echo "No alias to update"
              
              echo "✅ Rollback completed to version $PREVIOUS_VERSION"
            else
              echo "❌ No previous version found for rollback"
              exit 1
            fi
          else
            echo "❌ No versions found for rollback"
            exit 1
          fi
        else
          echo "❌ Lambda function not found"
          exit 1
        fi
    
    - name: Delete stack
      if: github.event.inputs.action == 'delete-stack'
      run: |
        STACK_NAME="finances-app-${{ github.event.inputs.environment }}"
        
        echo "⚠️ DANGER: Deleting stack: $STACK_NAME"
        
        # Confirm stack exists
        if aws cloudformation describe-stacks --stack-name "$STACK_NAME" --region ${{ env.AWS_REGION }} >/dev/null 2>&1; then
          echo "Stack found, proceeding with deletion..."
          
          # Delete the stack
          aws cloudformation delete-stack --stack-name "$STACK_NAME" --region ${{ env.AWS_REGION }}
          
          echo "Waiting for stack deletion..."
          aws cloudformation wait stack-delete-complete --stack-name "$STACK_NAME" --region ${{ env.AWS_REGION }}
          
          echo "✅ Stack deleted successfully"
          echo "🗑️ **Stack Deleted:** $STACK_NAME" >> $GITHUB_STEP_SUMMARY
        else
          echo "Stack $STACK_NAME not found"
          echo "ℹ️ **Stack Not Found:** $STACK_NAME" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Summary
      run: |
        echo "### Cleanup/Rollback Complete! 🧹" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        if [ -n "${{ github.event.inputs.pr_number }}" ]; then
          echo "**PR Number:** ${{ github.event.inputs.pr_number }}" >> $GITHUB_STEP_SUMMARY
        fi
